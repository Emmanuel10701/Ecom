// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  image          String?
  accounts       Account[]
  passwordResets PasswordReset[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model PasswordReset {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  token  String   @unique
  expiry DateTime
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
}
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  oldPrice    Float?
  ratings     Float    @default(0)
  image       String?
  quantity    Int?     @default(0)
  createdAt   DateTime @default(now())
  category    String?  // Ensure this matches your code
}


model Customer {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String  @unique
  phoneNumber String?
  address     String
}

model Subscriber {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  createdAt DateTime @default(now())
}
